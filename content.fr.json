{"pages":[{"title":"À Propos","text":"Je suis Zhenyan. Et il n’y a qu un brouillon!","link":"/fr/about/index.html"}],"posts":[{"title":"Bonjour le Monde!","text":"Bonjour tous le monde! Je suis Zhenyan, et je suis en train d’essayer de construire mon blog en utilisant Hexo! C’est mon premier post, tout premier! Ce site est en construction quand même. Restez calme, et attendez que de bonnes choses arrivent.","link":"/fr/hello-world/"},{"title":"ppa/pip/anaconda/npm plus lent Chine Continentale ! Ici les solutions. (Traduction en Cours)","text":"En Chine continentale, l’accès aux ressources étrangères ne pourrait pas vite, si vous n’avez pas modifié quelque chose. Pourquoi Il y a Grand Firewall de Chine(GFW) en Chine continentale, et quelques ressources telles que dl.google.com sont inaccessibles. Il y a limitation de la bande passante entre réseau de Chine continentale et réseau étranger. Et même si vous souhaitez accéder à des ressources comme Ubuntu PPA, PyPI, GitHub qui ne sont pas censurées par GFW, le téléchagement peut être extrêmement lent. oh-my-tunaLes belles personnes de l’Association Tsinghua TUNA ont construit un outil formidable pour nous: oh-my-tuna (alias TUNA avec un clic). Maintenant, ce outil va modifier la configuration de ces logiciels, pour leur donner les sources directement de TUNA: Anaconda Arch Linux Tex Live (by tlmgr) Debian GNU/Linux Homebrew PyPI Ubuntu Linux Et voilà les instructions: 1234567wget https://tuna.moe/oh-my-tuna/oh-my-tuna.py# Pour vous-mêmepython oh-my-tuna.py# ...ou pour tout le monde!sudo python oh-my-tuna.py --global# Obtenir de l'aidepython oh-my-tuna.py -h Vous pouvez vérifier leur GitHub dépôt.Attention: Tsinghua TUNA est actuellement incapable d’offrir source miroir Anaconda, en raison de ne pas pouvoir d’obtenir une autorisation d’Anaconda. Miroir Open SourceOpen source mirror sites sync resources of the origin site at a certain frequency, and deliver things you need as a relatively higher speed, because they are near to you! My favorite open source mirror is Tsinghua TUNA. Really fancy and always stable use. Here I’ll gonna show you detailed methods of mirror(source) setting. Ubuntu MirrorThis could be the easiest. It can be set at Settings, totally GUI thing. Or, you could set file in /etc/apt/sources.list to Mainland Chinese mirrors, here is an example. PyPI(pip) MirrorThere are PyPI mirrors in Mainland China, here are some HTTPS recommendations: Tsinghua TUNA(My favorite): https://pypi.tuna.tsinghua.edu.cn/simple/ Aliyun: https://mirrors.aliyun.com/pypi/simple/ Use Temporarily(PyPI)If you would like to use a PyPI mirror temporarily, simply add -i with source domain to the end of the command. 1pip install numpy -i https://pypi.tuna.tsinghua.edu.cn/simple/ Use Permanently(PyPI)If you would like to make a permanent change, you could write a pip.conf file in /etc/(system wide), or in $VIRTUAL_ENV/(within certain virtualenv environment) as below: 12[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple Here is a more simple way for pip(&gt;=10.0.0) users: 1pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple You can even update your pip like this: 1pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U For more information about pip.conf, please check here. npm MirrorI recommend Taobao NPM: https://registry.npm.taobao.org. Use Temporarily(npm)If you would like to use an npm mirror temporarily, simply add –registry with the registry source domain to the end of the command. 1npm &lt;your command&gt; --registry https://registry.npm.taobao.org install express Use Permanently(npm) Set source 1npm config set registry https://registry.npm.taobao.org Check source 1npm config get registry If we get a result as https://registry.npm.taobao.org, we success! Use cnpmcnpm is a custom npm client. It literally means Company npm. It is suitable for npm users under Mainland China network. Simply install it as: 1npm install -g cnpm --registry=https://registry.npm.taobao.org Reverse ProxyWhat is a reverse proxy? You might find information here. Precisely, you can change the domain name of the origin site to the reverse proxy site, and your access to the resource could be much faster. My favorite reverse proxy is USTC LUG revproxy, with their GitHub. Here is an example, if you would like to update your NVIDIA GPU drive, but you are suffering from low speed connection to launchpad, you could change your source from http://ppa.launchpad.net/graphics-drivers/ppa/ubuntu to https://launchpad.proxy.ustclug.org/graphics-drivers/ppa/ubuntu(Caution: change http to https). You may modify related file in /etc/apt/sources.list.d/. Here shows what USTC LUG revproxy provides: Remember: Always use https. Origin Site Revproxy Site ppa.launchpad.net launchpad.proxy.ustclug.org packages.elastic.co elastic.proxy.ustclug.org archive.cloudera.com/cdh5/ cloudera.proxy.ustclug.org/cdh5/ downloads.lede-project.org lede.proxy.ustclug.org downloads.openwrt.org openwrt.mirrors.ustc.edu.cn registry-1.docker.io docker.mirrors.ustc.edu.cn registry.npmjs.org npmreg.mirrors.ustc.edu.cn www.npmjs.com npm.mirrors.ustc.edu.cn fonts.gstatic.com fonts-gstatic.lug.ustc.edu.cn fonts.googleapis.com onts.lug.ustc.edu.cn ajax.googleapis.com ajax.lug.ustc.edu.cn storage.googleapis.com storage-googleapis.lug.ustc.edu.cn themes.googleusercontent.com google-themes.lug.ustc.edu.cn gerrit.googlesource.com gerrit-googlesource.lug.ustc.edu.cn secure.gravatar.com gravatar.lug.ustc.edu.cn Bash ProxyIf you have an HTTP/SOCKS 5 proxy running at the background, you can simply add this to your ~/.bashrc: 1234# You can add an alias for it, to choose use whether or not to use proxy in bash.# Choose one of the two lines below.export http_proxy='http://&lt;proxy server address (eg. localhost)&gt;:&lt;proxy server port (eg. 12333)&gt;'export http_proxy='socks5://&lt;proxy server address (eg. localhost)&gt;:&lt;proxy server port (eg. 1080)&gt;'","link":"/fr/Download-Open-Source-Resources-Faster-in-Mainland-China/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","link":"/fr/tags/Ubuntu/"},{"name":"Linux","slug":"Linux","link":"/fr/tags/Linux/"},{"name":"Python","slug":"Python","link":"/fr/tags/Python/"},{"name":"node.js","slug":"node-js","link":"/fr/tags/node-js/"},{"name":"ppa","slug":"ppa","link":"/fr/tags/ppa/"},{"name":"Tutoriel","slug":"Tutoriel","link":"/fr/tags/Tutoriel/"}],"categories":[{"name":"Devops","slug":"Devops","link":"/fr/categories/Devops/"},{"name":"Linux","slug":"Devops/Linux","link":"/fr/categories/Devops/Linux/"}]}